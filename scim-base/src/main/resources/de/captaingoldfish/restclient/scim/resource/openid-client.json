{
  "schemas": [
    "urn:ietf:params:scim:schemas:core:2.0:Schema"
  ],
  "id": "urn:ietf:params:scim:schemas:captaingoldfish:2.0:OpenIdClient",
  "name": "OpenIdClient",
  "description": "the client details that was registered at a specific OpenID Provider",
  "attributes": [
    {
      "name": "id",
      "type": "string",
      "description": "Unique identifier for the SCIM Resource as defined by the Service Provider.",
      "mutability": "readOnly",
      "returned": "always",
      "uniqueness": "server",
      "multiValued": false,
      "required": true,
      "caseExact": true
    },
    {
      "name": "openIdProviderId",
      "type": "integer",
      "description": "The ID reference to the OpenID Provider that is the owner of this client.",
      "mutability": "readWrite",
      "returned": "default",
      "uniqueness": "none",
      "multiValued": false,
      "required": true,
      "caseExact": false,
      "minimum": 1
    },
    {
      "name": "clientId",
      "type": "string",
      "description": "The unique identifier of the client",
      "mutability": "readWrite",
      "returned": "always",
      "uniqueness": "server",
      "multiValued": false,
      "required": true,
      "caseExact": false,
      "minLength": 1,
      "maxLength": 255
    },
    {
      "name": "clientSecret",
      "type": "string",
      "description": "The password of the client. This is an optional value that may be used as an alternative to JWT authentication",
      "mutability": "readWrite",
      "returned": "default",
      "uniqueness": "none",
      "multiValued": false,
      "required": false,
      "caseExact": false,
      "maxLength": 255
    },
    {
      "name": "audience",
      "type": "string",
      "description": "The audience is an optional field that becomes necessary if JWT authentication is used. This field will be entered into the created JWTs audience value.",
      "mutability": "readWrite",
      "returned": "default",
      "uniqueness": "none",
      "multiValued": false,
      "required": false,
      "caseExact": false,
      "maxLength": 1024
    },
    {
      "name": "signingKeyRef",
      "type": "string",
      "description": "The alias of the key reference within the application keystore to sign JWTs for authentication.",
      "mutability": "readWrite",
      "returned": "default",
      "uniqueness": "none",
      "multiValued": false,
      "required": false,
      "caseExact": false,
      "maxLength": 64
    },
    {
      "name": "decryptionKeyRef",
      "type": "string",
      "description": "The alias of the key reference within the application keystore to decrypt JWTs on responses e.g. the ID Token.",
      "mutability": "readWrite",
      "returned": "default",
      "uniqueness": "none",
      "multiValued": false,
      "required": false,
      "caseExact": false,
      "maxLength": 64
    }
  ]
}